{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, Quaternion, Spherical, Vector2, PerspectiveCamera, OrthographicCamera } from \"three\";\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    __publicField(this, \"object\");\n    __publicField(this, \"domElement\");\n    // Set to false to disable this control\n    __publicField(this, \"enabled\", true);\n    // \"target\" sets the location of focus, where the object orbits around\n    __publicField(this, \"target\", new Vector3());\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    __publicField(this, \"minDistance\", 0);\n    __publicField(this, \"maxDistance\", Infinity);\n    // How far you can zoom in and out ( OrthographicCamera only )\n    __publicField(this, \"minZoom\", 0);\n    __publicField(this, \"maxZoom\", Infinity);\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    __publicField(this, \"minPolarAngle\", 0);\n    // radians\n    __publicField(this, \"maxPolarAngle\", Math.PI);\n    // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    __publicField(this, \"minAzimuthAngle\", -Infinity);\n    // radians\n    __publicField(this, \"maxAzimuthAngle\", Infinity);\n    // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"enableDamping\", false);\n    __publicField(this, \"dampingFactor\", 0.05);\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    __publicField(this, \"enableZoom\", true);\n    __publicField(this, \"zoomSpeed\", 1);\n    // Set to false to disable rotating\n    __publicField(this, \"enableRotate\", true);\n    __publicField(this, \"rotateSpeed\", 1);\n    // Set to false to disable panning\n    __publicField(this, \"enablePan\", true);\n    __publicField(this, \"panSpeed\", 1);\n    __publicField(this, \"screenSpacePanning\", true);\n    // if false, pan orthogonal to world-space direction camera.up\n    __publicField(this, \"keyPanSpeed\", 7);\n    // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"autoRotate\", false);\n    __publicField(this, \"autoRotateSpeed\", 2);\n    // 30 seconds per orbit when fps is 60\n    __publicField(this, \"reverseOrbit\", false);\n    // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n    __publicField(this, \"reverseHorizontalOrbit\", false);\n    // true if you want to reverse the horizontal orbit direction\n    __publicField(this, \"reverseVerticalOrbit\", false);\n    // true if you want to reverse the vertical orbit direction\n    // The four arrow keys\n    __publicField(this, \"keys\", {\n      LEFT: \"ArrowLeft\",\n      UP: \"ArrowUp\",\n      RIGHT: \"ArrowRight\",\n      BOTTOM: \"ArrowDown\"\n    });\n    // Mouse buttons\n    __publicField(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n    // Touch fingers\n    __publicField(this, \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n    __publicField(this, \"target0\");\n    __publicField(this, \"position0\");\n    __publicField(this, \"zoom0\");\n    // the target DOM element for key events\n    __publicField(this, \"_domElementKeyEvents\", null);\n    __publicField(this, \"getPolarAngle\");\n    __publicField(this, \"getAzimuthalAngle\");\n    __publicField(this, \"setPolarAngle\");\n    __publicField(this, \"setAzimuthalAngle\");\n    __publicField(this, \"getDistance\");\n    __publicField(this, \"listenToKeyEvents\");\n    __publicField(this, \"stopListenToKeyEvents\");\n    __publicField(this, \"saveState\");\n    __publicField(this, \"reset\");\n    __publicField(this, \"update\");\n    __publicField(this, \"connect\");\n    __publicField(this, \"dispose\");\n    this.object = object;\n    this.domElement = domElement;\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n    this.getPolarAngle = () => spherical.phi;\n    this.getAzimuthalAngle = () => spherical.theta;\n    this.setPolarAngle = value => {\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi;\n      if (currentPhi < 0) currentPhi += 2 * Math.PI;\n      if (phi < 0) phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n    this.setAzimuthalAngle = value => {\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta;\n      if (currentTheta < 0) currentTheta += 2 * Math.PI;\n      if (theta < 0) theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n    this.listenToKeyEvents = domElement2 => {\n      domElement2.addEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = domElement2;\n    };\n    this.stopListenToKeyEvents = () => {\n      this._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = null;\n    };\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    };\n    this.update = (() => {\n      const offset = new Vector3();\n      const up = new Vector3(0, 1, 0);\n      const quat = new Quaternion().setFromUnitVectors(object.up, up);\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        quat.setFromUnitVectors(object.up, up);\n        quatInverse.copy(quat).invert();\n        offset.copy(position).sub(scope.target);\n        offset.applyQuaternion(quat);\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        }\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale;\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n        offset.setFromSpherical(spherical);\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n        scale = 1;\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    })();\n    this.connect = domElement2 => {\n      if (domElement2 === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n      scope.domElement = domElement2;\n      scope.domElement.style.touchAction = \"none\";\n      scope.domElement.addEventListener(\"contextmenu\", onContextMenu);\n      scope.domElement.addEventListener(\"pointerdown\", onPointerDown);\n      scope.domElement.addEventListener(\"pointercancel\", onPointerCancel);\n      scope.domElement.addEventListener(\"wheel\", onMouseWheel);\n    };\n    this.dispose = () => {\n      var _a, _b, _c, _d, _e, _f;\n      (_a = scope.domElement) == null ? void 0 : _a.removeEventListener(\"contextmenu\", onContextMenu);\n      (_b = scope.domElement) == null ? void 0 : _b.removeEventListener(\"pointerdown\", onPointerDown);\n      (_c = scope.domElement) == null ? void 0 : _c.removeEventListener(\"pointercancel\", onPointerCancel);\n      (_d = scope.domElement) == null ? void 0 : _d.removeEventListener(\"wheel\", onMouseWheel);\n      (_e = scope.domElement) == null ? void 0 : _e.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n      (_f = scope.domElement) == null ? void 0 : _f.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      }\n    };\n    const scope = this;\n    const changeEvent = {\n      type: \"change\"\n    };\n    const startEvent = {\n      type: \"start\"\n    };\n    const endEvent = {\n      type: \"end\"\n    };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 1e-6;\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const pointers = [];\n    const pointerPositions = {};\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit || scope.reverseHorizontalOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n    function rotateUp(angle) {\n      if (scope.reverseOrbit || scope.reverseVerticalOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft2(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp2(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })();\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan2(deltaX, deltaY) {\n        const element = scope.domElement;\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length();\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180);\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\");\n          scope.enablePan = false;\n        }\n      };\n    })();\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n    function onPointerDown(event) {\n      var _a, _b;\n      if (scope.enabled === false) return;\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.ownerDocument.addEventListener(\"pointermove\", onPointerMove);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.addEventListener(\"pointerup\", onPointerUp);\n      }\n      addPointer(event);\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n    function onPointerUp(event) {\n      var _a, _b, _c;\n      removePointer(event);\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.releasePointerCapture(event.pointerId);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n        (_c = scope.domElement) == null ? void 0 : _c.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      }\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n    function onMouseDown(event) {\n      let mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      trackPointer(event);\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      trackPointer(event);\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n    function addPointer(event) {\n      pointers.push(event);\n    }\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n      if (position === void 0) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n      position.set(event.pageX, event.pageY);\n    }\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    }\n    if (domElement !== void 0) this.connect(domElement);\n    this.update();\n  }\n}\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false;\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n}\nexport { MapControls, OrbitControls };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","EventDispatcher","Vector3","MOUSE","TOUCH","Quaternion","Spherical","Vector2","PerspectiveCamera","OrthographicCamera","moduloWrapAround","offset","capacity","OrbitControls","constructor","object","domElement","Infinity","Math","PI","LEFT","UP","RIGHT","BOTTOM","ROTATE","MIDDLE","DOLLY","PAN","ONE","TWO","DOLLY_PAN","target0","target","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","setPolarAngle","currentPhi","phiDist","abs","sphericalDelta","scope","update","setAzimuthalAngle","currentTheta","thetaDist","getDistance","distanceTo","listenToKeyEvents","domElement2","addEventListener","onKeyDown","_domElementKeyEvents","stopListenToKeyEvents","removeEventListener","saveState","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","state","STATE","NONE","up","quat","setFromUnitVectors","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","autoRotate","rotateLeft","getAutoRotationAngle","enableDamping","dampingFactor","min","minAzimuthAngle","max","maxAzimuthAngle","isFinite","minPolarAngle","maxPolarAngle","makeSafe","radius","scale","minDistance","maxDistance","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","connect","document","console","error","style","touchAction","onContextMenu","onPointerDown","onPointerCancel","onMouseWheel","dispose","_a","_b","_c","_d","_e","_f","ownerDocument","onPointerMove","onPointerUp","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","autoRotateSpeed","getZoomScale","pow","zoomSpeed","angle","reverseOrbit","reverseHorizontalOrbit","rotateUp","reverseVerticalOrbit","panLeft","v","panLeft2","distance","objectMatrix","setFromMatrixColumn","panUp","panUp2","screenSpacePanning","crossVectors","pan","pan2","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","warn","enablePan","dollyOut","dollyScale","minZoom","maxZoom","enableZoom","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","rotateSpeed","x","y","handleMouseMoveDolly","handleMouseMovePan","panSpeed","handleMouseWheel","handleKeyDown","needsUpdate","code","keys","keyPanSpeed","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","enableRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","enabled","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","pointerId","mouseAction","button","mouseButtons","ctrlKey","metaKey","shiftKey","trackPointer","touches","DOLLY_ROTATE","push","i","splice","pointer","MapControls"],"sources":["C:/Users/Wolfgang/Documents/GitHub/Aeydran/node_modules/three-stdlib/controls/OrbitControls.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, Quaternion, Spherical, Vector2, PerspectiveCamera, OrthographicCamera } from \"three\";\nconst moduloWrapAround = (offset, capacity) => (offset % capacity + capacity) % capacity;\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    __publicField(this, \"object\");\n    __publicField(this, \"domElement\");\n    // Set to false to disable this control\n    __publicField(this, \"enabled\", true);\n    // \"target\" sets the location of focus, where the object orbits around\n    __publicField(this, \"target\", new Vector3());\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    __publicField(this, \"minDistance\", 0);\n    __publicField(this, \"maxDistance\", Infinity);\n    // How far you can zoom in and out ( OrthographicCamera only )\n    __publicField(this, \"minZoom\", 0);\n    __publicField(this, \"maxZoom\", Infinity);\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    __publicField(this, \"minPolarAngle\", 0);\n    // radians\n    __publicField(this, \"maxPolarAngle\", Math.PI);\n    // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    __publicField(this, \"minAzimuthAngle\", -Infinity);\n    // radians\n    __publicField(this, \"maxAzimuthAngle\", Infinity);\n    // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"enableDamping\", false);\n    __publicField(this, \"dampingFactor\", 0.05);\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    __publicField(this, \"enableZoom\", true);\n    __publicField(this, \"zoomSpeed\", 1);\n    // Set to false to disable rotating\n    __publicField(this, \"enableRotate\", true);\n    __publicField(this, \"rotateSpeed\", 1);\n    // Set to false to disable panning\n    __publicField(this, \"enablePan\", true);\n    __publicField(this, \"panSpeed\", 1);\n    __publicField(this, \"screenSpacePanning\", true);\n    // if false, pan orthogonal to world-space direction camera.up\n    __publicField(this, \"keyPanSpeed\", 7);\n    // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    __publicField(this, \"autoRotate\", false);\n    __publicField(this, \"autoRotateSpeed\", 2);\n    // 30 seconds per orbit when fps is 60\n    __publicField(this, \"reverseOrbit\", false);\n    // true if you want to reverse the orbit to mouse drag from left to right = orbits left\n    __publicField(this, \"reverseHorizontalOrbit\", false);\n    // true if you want to reverse the horizontal orbit direction\n    __publicField(this, \"reverseVerticalOrbit\", false);\n    // true if you want to reverse the vertical orbit direction\n    // The four arrow keys\n    __publicField(this, \"keys\", { LEFT: \"ArrowLeft\", UP: \"ArrowUp\", RIGHT: \"ArrowRight\", BOTTOM: \"ArrowDown\" });\n    // Mouse buttons\n    __publicField(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n    // Touch fingers\n    __publicField(this, \"touches\", { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN });\n    __publicField(this, \"target0\");\n    __publicField(this, \"position0\");\n    __publicField(this, \"zoom0\");\n    // the target DOM element for key events\n    __publicField(this, \"_domElementKeyEvents\", null);\n    __publicField(this, \"getPolarAngle\");\n    __publicField(this, \"getAzimuthalAngle\");\n    __publicField(this, \"setPolarAngle\");\n    __publicField(this, \"setAzimuthalAngle\");\n    __publicField(this, \"getDistance\");\n    __publicField(this, \"listenToKeyEvents\");\n    __publicField(this, \"stopListenToKeyEvents\");\n    __publicField(this, \"saveState\");\n    __publicField(this, \"reset\");\n    __publicField(this, \"update\");\n    __publicField(this, \"connect\");\n    __publicField(this, \"dispose\");\n    this.object = object;\n    this.domElement = domElement;\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n    this.getPolarAngle = () => spherical.phi;\n    this.getAzimuthalAngle = () => spherical.theta;\n    this.setPolarAngle = (value) => {\n      let phi = moduloWrapAround(value, 2 * Math.PI);\n      let currentPhi = spherical.phi;\n      if (currentPhi < 0)\n        currentPhi += 2 * Math.PI;\n      if (phi < 0)\n        phi += 2 * Math.PI;\n      let phiDist = Math.abs(phi - currentPhi);\n      if (2 * Math.PI - phiDist < phiDist) {\n        if (phi < currentPhi) {\n          phi += 2 * Math.PI;\n        } else {\n          currentPhi += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.phi = phi - currentPhi;\n      scope.update();\n    };\n    this.setAzimuthalAngle = (value) => {\n      let theta = moduloWrapAround(value, 2 * Math.PI);\n      let currentTheta = spherical.theta;\n      if (currentTheta < 0)\n        currentTheta += 2 * Math.PI;\n      if (theta < 0)\n        theta += 2 * Math.PI;\n      let thetaDist = Math.abs(theta - currentTheta);\n      if (2 * Math.PI - thetaDist < thetaDist) {\n        if (theta < currentTheta) {\n          theta += 2 * Math.PI;\n        } else {\n          currentTheta += 2 * Math.PI;\n        }\n      }\n      sphericalDelta.theta = theta - currentTheta;\n      scope.update();\n    };\n    this.getDistance = () => scope.object.position.distanceTo(scope.target);\n    this.listenToKeyEvents = (domElement2) => {\n      domElement2.addEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = domElement2;\n    };\n    this.stopListenToKeyEvents = () => {\n      this._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      this._domElementKeyEvents = null;\n    };\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    };\n    this.update = (() => {\n      const offset = new Vector3();\n      const up = new Vector3(0, 1, 0);\n      const quat = new Quaternion().setFromUnitVectors(object.up, up);\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        quat.setFromUnitVectors(object.up, up);\n        quatInverse.copy(quat).invert();\n        offset.copy(position).sub(scope.target);\n        offset.applyQuaternion(quat);\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI)\n            min += twoPI;\n          else if (min > Math.PI)\n            min -= twoPI;\n          if (max < -Math.PI)\n            max += twoPI;\n          else if (max > Math.PI)\n            max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        }\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale;\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n        offset.setFromSpherical(spherical);\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n        scale = 1;\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    })();\n    this.connect = (domElement2) => {\n      if (domElement2 === document) {\n        console.error(\n          'THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.'\n        );\n      }\n      scope.domElement = domElement2;\n      scope.domElement.style.touchAction = \"none\";\n      scope.domElement.addEventListener(\"contextmenu\", onContextMenu);\n      scope.domElement.addEventListener(\"pointerdown\", onPointerDown);\n      scope.domElement.addEventListener(\"pointercancel\", onPointerCancel);\n      scope.domElement.addEventListener(\"wheel\", onMouseWheel);\n    };\n    this.dispose = () => {\n      var _a, _b, _c, _d, _e, _f;\n      (_a = scope.domElement) == null ? void 0 : _a.removeEventListener(\"contextmenu\", onContextMenu);\n      (_b = scope.domElement) == null ? void 0 : _b.removeEventListener(\"pointerdown\", onPointerDown);\n      (_c = scope.domElement) == null ? void 0 : _c.removeEventListener(\"pointercancel\", onPointerCancel);\n      (_d = scope.domElement) == null ? void 0 : _d.removeEventListener(\"wheel\", onMouseWheel);\n      (_e = scope.domElement) == null ? void 0 : _e.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n      (_f = scope.domElement) == null ? void 0 : _f.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener(\"keydown\", onKeyDown);\n      }\n    };\n    const scope = this;\n    const changeEvent = { type: \"change\" };\n    const startEvent = { type: \"start\" };\n    const endEvent = { type: \"end\" };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 1e-6;\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const pointers = [];\n    const pointerPositions = {};\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      if (scope.reverseOrbit || scope.reverseHorizontalOrbit) {\n        sphericalDelta.theta += angle;\n      } else {\n        sphericalDelta.theta -= angle;\n      }\n    }\n    function rotateUp(angle) {\n      if (scope.reverseOrbit || scope.reverseVerticalOrbit) {\n        sphericalDelta.phi += angle;\n      } else {\n        sphericalDelta.phi -= angle;\n      }\n    }\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft2(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp2(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })();\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan2(deltaX, deltaY) {\n        const element = scope.domElement;\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length();\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180);\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          panLeft(\n            deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth,\n            scope.object.matrix\n          );\n          panUp(\n            deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight,\n            scope.object.matrix\n          );\n        } else {\n          console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\");\n          scope.enablePan = false;\n        }\n      };\n    })();\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\");\n        scope.enableZoom = false;\n      }\n    }\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate() {\n      if (pointers.length == 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan() {\n      if (pointers.length == 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enablePan)\n        handleTouchStartPan();\n    }\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom)\n        handleTouchStartDolly();\n      if (scope.enableRotate)\n        handleTouchStartRotate();\n    }\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight);\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (pointers.length == 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enablePan)\n        handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom)\n        handleTouchMoveDolly(event);\n      if (scope.enableRotate)\n        handleTouchMoveRotate(event);\n    }\n    function onPointerDown(event) {\n      var _a, _b;\n      if (scope.enabled === false)\n        return;\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.ownerDocument.addEventListener(\"pointermove\", onPointerMove);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.addEventListener(\"pointerup\", onPointerUp);\n      }\n      addPointer(event);\n      if (event.pointerType === \"touch\") {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false)\n        return;\n      if (event.pointerType === \"touch\") {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n    function onPointerUp(event) {\n      var _a, _b, _c;\n      removePointer(event);\n      if (pointers.length === 0) {\n        (_a = scope.domElement) == null ? void 0 : _a.releasePointerCapture(event.pointerId);\n        (_b = scope.domElement) == null ? void 0 : _b.ownerDocument.removeEventListener(\"pointermove\", onPointerMove);\n        (_c = scope.domElement) == null ? void 0 : _c.ownerDocument.removeEventListener(\"pointerup\", onPointerUp);\n      }\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n    function onMouseDown(event) {\n      let mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false)\n              return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false)\n              return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      if (scope.enabled === false)\n        return;\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false)\n            return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false)\n            return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false)\n        return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      trackPointer(event);\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false)\n                return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (scope.enablePan === false)\n                return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false)\n                return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false)\n                return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      trackPointer(event);\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false)\n            return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false)\n            return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false)\n            return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false)\n            return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false)\n        return;\n      event.preventDefault();\n    }\n    function addPointer(event) {\n      pointers.push(event);\n    }\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n      if (position === void 0) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n      position.set(event.pageX, event.pageY);\n    }\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    }\n    if (domElement !== void 0)\n      this.connect(domElement);\n    this.update();\n  }\n}\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false;\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n}\nexport {\n  MapControls,\n  OrbitControls\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}